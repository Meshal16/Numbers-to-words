
ONES_CITY = ["", "واحد", "اثنين", "ثلاثه", "أربعه", "خمسه", "سته", "سبعه", "ثمانيه", "تسعه"]

TENS_CITY = ["", "عشره", "عشرين", "ثلاثين", "أربعين", "خمسين", "ستين", "سبعين", "ثمانين", "تسعين"]

TEENS_CITY = [
    "عشره", "حدعش", "اثنعش", "ثلتعش", "أربعتعش", "خمستعش",
    "ستتعش", "سبعتعش", "ثمانتعش", "تسعتعش"
]

HUNDREDS_CITY = [
    "", "ميّه", "ميّتين", "ثلاث ميّه", "أربع ميّه", "خمس ميّه",
    "ست ميّه", "سبع ميّه", "ثمان ميّه", "تسع ميّه"
]

GROUPS_CITY = [
    "",        # group 0 → ones (unused)
    "ألف",     # group 1 → thousands
    "مليون",   # group 2 → millions
    "مليار"    # group 3 → billions
]

GROUPS_CITY_PLURAL = [
    "",         # unused
    "آلاف",     # thousands (3+)
    "ملايين",   # millions (3+)
    "مليارات"   # billions (3+)
]

GROUPS_CITY_DUAL = [
    "",         # unused
    "ألفين",    # 2,000
    "مليونين",  # 2,000,000
    "مليارين"   # 2,000,000,000
]

def convert_below_100(n):
    if n < 10:
        return ONES_CITY[n]
    elif 10 <= n < 20:
        return TEENS_CITY[n - 10]
    else:
        ones = n % 10
        tens = n // 10
        if ones == 0:
            return TENS_CITY[tens]
        return f"{ONES_CITY[ones]} و {TENS_CITY[tens]}"

def convert_below_1000(n):
    hundreds = n // 100
    rest = n % 100
    result = ""
    if hundreds > 0:
        result += HUNDREDS_CITY[hundreds]
        if rest > 0:
            result += " و "
    if rest > 0:
        result += convert_below_100(rest)
    return result

def convert_group(n, group_index):
    if n == 0:
        return ""
    elif n == 1:
        return GROUPS_CITY[group_index]
    elif n == 2:
        return GROUPS_CITY_DUAL[group_index]
    elif 3 <= n <= 10:
        return f"{convert_below_1000(n)} {GROUPS_CITY_PLURAL[group_index]}"
    else:
        return f"{convert_below_1000(n)} {GROUPS_CITY[group_index]}"

def convert_to_city_arabic(number):
    if number == 0:
        return "صفر"
    if number < 0 or number > 999_999_999_999:
        return "الرقم خارج النطاق المدعوم (0 - 999,999,999,999)"

    billions = number // 1_000_000_000
    millions = (number % 1_000_000_000) // 1_000_000
    thousands = (number % 1_000_000) // 1000
    hundreds = number % 1000

    parts = []
    if billions:
        parts.append(convert_group(billions, 3))
    if millions:
        parts.append(convert_group(millions, 2))
    if thousands:
        parts.append(convert_group(thousands, 1))
    if hundreds:
        parts.append(convert_below_1000(hundreds))

    return " و ".join(parts)

#Test
if __name__ == "__main__":
    test_numbers = [
        0, 1, 12, 99, 1000, 2023, 1_000_000, 3_500_000, 1_000_000_000,
        2_000_000_000, 4_500_000_000, 7_345_200_999, 999_999_999_999
    ]
    for num in test_numbers:
        print(f"{num} → {convert_to_city_arabic(num)}")
